{"version":3,"sources":["lib/VerticalCrosshair.js","lib/VerticalCrosshairSelector.js","lib/index.js","index.js"],"names":["VerticalCrosshair","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","ref","React","createRef","_this$props","width","height","react_default","a","createElement","style","display","draw","_this$props2","X","minX","maxX","ctx","current","getContext","clearRect","undefined","hoverDomX","toDomXCoord_Linear","beginPath","moveTo","Math","round","lineTo","stroke","PureComponent","propType","PropTypes","number","isRequired","VerticalCrosshairSelector","lastEvent","select","hoveringPosition","selectHandler","fromDomXCoord_Linear","domX","Component","VerticalCrosshairBundle","state","_this2","_this$state","Fragment","type","min","max","value","onChange","ev","setState","Number","parseInt","target","onClick","position","backgroundImage","lib","VerticalCrosshairWithPlotInteractionProviderBundle","_this3","crosshairX","_this4","dist","transitionGraph","INTERACTION_MODEL_BARE","render","positions","lib_VerticalCrosshairSelector","App","react_router_dom","className","to","react_router","path","component","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.649ccaec.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from \"prop-types\";\nimport {toDomXCoord_Linear} from \"plot-utils\";\n        \nclass VerticalCrosshair extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.ref= React.createRef();\n  }\n  \n  render() {\n    let { width,\n          height} = this.props;\n    return (\n      <canvas ref={this.ref} width={width} height={1} style={{width:width,height:height,display:\"block\"}}></canvas>\n    );\n  }\n  \n  componentDidMount() {\n    this.draw();\n  }\n  \n  componentDidUpdate() {\n    this.draw();\n  }\n  \n  draw() {\n    let {X,\n          minX,maxX,width} = this.props;\n    let canvas = this.ref.current;\n    let ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0,0,width,1);\n    if (X===undefined || X===null) {\n      return;\n    }\n    let hoverDomX = toDomXCoord_Linear(width,minX,maxX,X);\n    ctx.beginPath();\n    ctx.moveTo(Math.round(hoverDomX)+0.5,0);\n    ctx.lineTo(Math.round(hoverDomX)+0.5,1);\n    ctx.stroke();\n  }\n}\n\nVerticalCrosshair.propType = {\n  X: PropTypes.number,\n  minX: PropTypes.number.isRequired,\n  maxX: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n}\n\nexport default VerticalCrosshair;\n","import {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {fromDomXCoord_Linear} from \"plot-utils\";\n\nclass VerticalCrosshairSelector extends Component {\n  constructor(props){\n    super(props);\n    this.lastEvent=null;\n  }\n  \n  render(){\n    return null;\n  }\n\n  componentDidMount(){\n    this.select();\n  }\n\n  componentDidUpdate(){\n    this.select();\n  }\n\n  select(){\n    let { hoveringPosition,selectHandler,\n          width,minX,maxX} = this.props;\n    // old event\n    if (hoveringPosition===this.lastEvent) {\n      return;\n    }\n    // new event\n    this.lastEvent = hoveringPosition;\n    if (!hoveringPosition)\n      selectHandler(null);\n    else {\n      selectHandler(fromDomXCoord_Linear(width,minX,maxX,hoveringPosition.domX));\n    }\n  }\n}\n\nVerticalCrosshairSelector.propTypes = {\n  width: PropTypes.number.isRequired,\n  minX: PropTypes.number.isRequired,\n  maxX: PropTypes.number.isRequired,\n  hoveringPosition: PropTypes.object,\n  selectHandler: PropTypes.func.isRequired,\n}\n\nexport default VerticalCrosshairSelector;\n","import VerticalCrosshair from \"./VerticalCrosshair\";\nimport VerticalCrosshairSelector from \"./VerticalCrosshairSelector\";\n\nexport default VerticalCrosshair;\nexport {VerticalCrosshairSelector};\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {PlotInteractionProvider,INTERACTION_MODEL_BARE} from \"react-plot-interaction-box\";\nimport {HashRouter as Router, Link, Route} from \"react-router-dom\";\nimport VerticalCrosshair, {VerticalCrosshairSelector} from \"./lib\";\n\n// CSS\nimport \"./index.css\";\n\nclass VerticalCrosshairBundle extends Component {\n  constructor(props){\n    super(props);\n    this.state={width: 100,\n                height: 100,\n                minX: 0,\n                maxX: 100,\n                X: null\n                };\n  }\n  \n  render() {\n    let {width, height, minX, maxX, X} = this.state;\n    return (\n      <>\n        <fieldset>\n          <legend>Props</legend>\n          <div>\n            width\n            <input type=\"range\" min={50} max={250} value={width}\n                    onChange={(ev)=>this.setState({width: Number.parseInt(ev.target.value)})}/>\n            {width}\n          </div>\n          <div>\n            height\n            <input type=\"range\" min={50} max={250} value={height}\n                    onChange={(ev)=>this.setState({height: Number.parseInt(ev.target.value)})}/>\n            {height}\n          </div>\n          <div>\n            minX\n            <input type=\"range\" min={-500} max={maxX} value={minX}\n                    onChange={(ev)=>this.setState({minX: Number.parseInt(ev.target.value)})}/>\n            {minX}\n          </div>\n          <div>\n            maxX\n            <input type=\"range\" min={minX} max={500} value={maxX}\n                    onChange={(ev)=>this.setState({maxX: Number.parseInt(ev.target.value)})}/>\n            {maxX}\n          </div>\n          <div>\n            X\n            <button onClick={()=>this.setState({X: X===null?0:null })}> toogle null</button>\n            {X===null? null:\n            <input type=\"range\" min={minX-100} max={maxX+100} value={X}\n                    onChange={(ev)=>this.setState({X: Number.parseInt(ev.target.value)})}/>\n            }\n            {X}\n          </div>\n        </fieldset>\n        \n        <fieldset>\n          <legend>Result</legend>\n          <div style={{position:\"relative\",width:width,height:height}}>\n            <div style={{ position:\"absolute\",\n                          backgroundImage:\"linear-gradient(to bottom right, rgba(0,0,0,0), lightblue)\",\n                          width:width,height:height\n                          }}>\n            </div>\n            <div style={{ position:\"absolute\",\n                          backgroundImage:\"linear-gradient(to bottom right, pink, rgba(0,0,0,0))\",\n                          width:width,height:height\n                          }}>\n            </div>\n            <VerticalCrosshair  width={width} height={height}\n                                minX={minX}\n                                maxX={maxX}\n                                X={X}\n                                />\n          </div>\n        </fieldset>\n      </>\n    );\n  }\n}\n\nclass VerticalCrosshairWithPlotInteractionProviderBundle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {crosshairX:null};\n  }\n  \n  render() {\n    let {crosshairX} = this.state;\n    let width = 400;\n    let height = 400; \n    let minX = 0;\n    let maxX = 400;\n    \n    return (\n      <div style={{position:\"relative\",width:width,height:height}}>\n        <div style={{ position:\"absolute\",\n                      backgroundImage:\"linear-gradient(to bottom right, rgba(0,0,0,0), lightblue)\",\n                      width:width,height:height\n                      }}>\n        </div>\n        <div style={{ position:\"absolute\",\n                      backgroundImage:\"linear-gradient(to bottom right, pink, rgba(0,0,0,0))\",\n                      width:width,height:height\n                      }}>\n        </div>\n        <div style={{ position:\"absolute\",\n                      width:width,height:height\n                      }}>\n          <VerticalCrosshair  width={width} height={height}\n                              minX={minX}\n                              maxX={maxX}\n                              X={crosshairX}\n                              />\n        </div>\n        <div style={{ position:\"absolute\",\n                      width:width,height:height\n                      }}>\n          <PlotInteractionProvider  width={width} height={height}\n                                    transitionGraph={INTERACTION_MODEL_BARE}\n                                    render={(positions)=>\n            <VerticalCrosshairSelector  width={width}\n                                        minX={minX}\n                                        maxX={maxX}\n                                        hoveringPosition={positions.hoveringPosition}\n                                        selectHandler={(X)=>{\n                                          this.setState({crosshairX:X});\n                                        }}\n                                        />\n                                    }/>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass App extends Component {\n  render() {\n    return(\n      <Router>\n        <nav className=\"app\">\n          <Link to=\"/VerticalCrosshair\">VerticalCrosshair</Link>\n          <Link to=\"/VerticalCrosshair_with_PlotInteractionProvider\">VerticalCrosshair with PlotInteractionProvider</Link>\n        </nav>\n        <Route path=\"/VerticalCrosshair/\" component={VerticalCrosshairBundle} />\n        <Route path=\"/VerticalCrosshair_with_PlotInteractionProvider/\" component={VerticalCrosshairWithPlotInteractionProviderBundle} />\n      </Router>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}